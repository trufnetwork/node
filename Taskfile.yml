version: "3"

tasks:
  default:
    cmds:
      - task -l

  build:
    desc: Build kwild binary
    cmds:
      - go build -o ./.build/kwild ./cmd/kwild/main.go

  build:debug:
    desc: Build kwild binary with debug flags
    cmds:
      - go build -gcflags "all=-N -l" -o ./.build/kwild ./cmd/kwild/main.go

  kwild:
    desc: Run kwild server
    cmds:
      - .build/kwild --autogen

  postgres:
    desc: Run a postgres container
    cmds:
      - docker start kwil-postgres || docker run -d -p 5432:5432 --name kwil-postgres -e "POSTGRES_HOST_AUTH_METHOD=trust" kwildb/postgres:latest

  compose:
    desc: Run docker-compose locally
    env:
      PRIVATE_KEY: "0000000000000000000000000000000000000000000000000000000000000001" # feel free to change this private key if you have one, it is for local development anyway
#      WHITELIST_WALLETS: "0x304e893AdB2Ad8E8C37F4884Ad1EC3df8bA9bDcf" # feel free to uncomment and change this whitelist wallets if you want to use whitelist wallets feature in local development
#      WRITE_WHITELIST_WALLETS: "0x2B5AD5c4795c026514f8317c7a215E218DcCD6cF" # feel free to uncomment and change this whitelist wallets if you want to use whitelist wallets feature in local development
    cmds:
      - docker compose up

  tools:
    desc: Install tools
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.56.2
      - go install github.com/vektra/mockery/v2@v2.42.1

  mockery:
    desc: Generate mocks
    cmds:
      - mockery --all

  lint:
    desc: Run linter
    cmds:
      - golangci-lint run

  kwil-binaries:
    cmds:
      - wget -O kwil-db.tar.gz https://github.com/kwilteam/kwil-db/releases/download/v0.7.0/kwil-db_0.7.0_linux_amd64.tar.gz
        && tar -xzvf kwil-db.tar.gz 'kwil-cli' 'kwil-admin'
        && mkdir -p ./.build
        && mv ./kwil-cli .build
        && mv ./kwil-admin .build
        && rm ./kwil-db.tar.gz

  clear-data:
    cmds:
      - rm -r ~/.kwild || true
      - docker volume rm tsn-db_data-kwil-postgres tsn-db_data-push-tsn-data -f

  setup:local-cert:
    desc: Trust local certs for development
    cmds:
      - sudo cp ./deployments/dev-gateway/certs/localhost.crt /usr/local/share/ca-certificates/localhost.crt
      - sudo update-ca-certificates

  start:local-gateway:
    desc: The gateway is not needed for development. However, you might want to test its configuration.
    cmds:
      - docker compose -f deployments/dev-gateway/dev-gateway-compose.yaml up -d

  seed:
    desc: Seed the database
    cmds:
      - bash ./scripts/setup.sh

  test:unit:
    desc: Run unit tests
    cmds:
      - go test ./internal/extensions/...

  coverage:
    desc: Run coverage
    cmds:
      - bash ./scripts/coverage.sh
