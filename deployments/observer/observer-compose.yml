# Observer (Production)
# This should send metrics to monitoring systems like Datadog, directly
name: observer-prod
services:
  vector:
    image: timberio/vector:0.41.1-debian # debian is needed for journald input
    command: --config /etc/vector/vector-cfg/*
    user: root # needed to read journalctl
    volumes:
      - ./vector-prod-destination.yml:/etc/vector/vector-cfg/vector-destination.yml
      - ./vector-sources.yml:/etc/vector/vector-cfg/vector-sources.yml
      # we want to mount the journal and machine-id to get logs from systemd from host
      - /run/log/journal:/run/log/journal:ro
      - /var/log/journal:/var/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
      # we're want to collect docker logs from host
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount the cgroup filesystem to allow Vector to access cgroup metrics
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    environment:
      GRAFANA_CLOUD_PROMETHEUS_ENDPOINT: ${GRAFANA_CLOUD_PROMETHEUS_ENDPOINT?}
      GRAFANA_CLOUD_PROMETHEUS_USER: ${GRAFANA_CLOUD_PROMETHEUS_USER?}
      GRAFANA_CLOUD_PROMETHEUS_PASSWORD: ${GRAFANA_CLOUD_PROMETHEUS_PASSWORD?}
      GRAFANA_CLOUD_LOGS_DOMAIN: ${GRAFANA_CLOUD_LOGS_DOMAIN?}
      GRAFANA_CLOUD_LOGS_USER: ${GRAFANA_CLOUD_LOGS_USER?}
      GRAFANA_CLOUD_LOGS_PASSWORD: ${GRAFANA_CLOUD_LOGS_PASSWORD?}
      INSTANCE_NAME: ${INSTANCE_NAME}
      SERVICE_NAME: ${SERVICE_NAME}
      ENV: ${ENV}
