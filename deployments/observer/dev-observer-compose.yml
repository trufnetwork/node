# Observer (Development)
# Objective of this setup is to be able to visualize metrics in Grafana
# during development
name: dev-observer
services:
  vector:
    image: timberio/vector:0.41.1-debian # debian is needed for journald input
    command: '--config /etc/vector/vector-cfg/*'
    user: root # needed to read journalctl
    volumes:
      # vector config
      - ./vector-dev-destination.yml:/etc/vector/vector-cfg/vector-dev-destination.yml
      - ./vector-sources.yml:/etc/vector/vector-cfg/vector-sources.yml
      # we want to mount the journal and machine-id to get logs from systemd from host
      - /run/log/journal:/run/log/journal:ro
      - /var/log/journal:/var/log/journal:ro
      - /etc/machine-id:/etc/machine-id:ro
      # we're want to collect docker logs from host
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount the proc filesystem to allow Vector to access host metrics
      - /proc:/mnt/host/proc:ro
      - /sys:/mnt/host/sys:ro
    environment:
      PROCFS_ROOT: /mnt/host/proc
      SYSFS_ROOT: /mnt/host/sys
      DOCKER_HOST: unix:///var/run/docker.sock
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
        tag: "{{.Name}}"

  prometheus:
    image: prom/prometheus:v2.30.3
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./dev-prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - '9090:9090'
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
        tag: "{{.Name}}"

  grafana:
    image: grafana/grafana:8.2.2
    ports:
      - '3000:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      # provision our sources
      - ./dev-grafana/provisioning/datasources/sources.yaml:/etc/grafana/provisioning/datasources/sources.yaml
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
        tag: "{{.Name}}"

  loki:
    image: grafana/loki:2.7.1
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "2"
        tag: "{{.Name}}"

volumes:
  grafana-storage: null