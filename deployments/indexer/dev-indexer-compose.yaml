services:
  indexer-caddy:
    image: "caddy:latest"
    hostname: indexer-caddy
    ports:
      - "81:81"
      - "444:444"
    volumes:
      - type: bind
        source: ./Caddyfile
        target: /etc/caddy/Caddyfile
    networks:
      - tsn-network
  indexer-postgres:
    image: "postgres:latest"
    hostname: indexer-postgres
    restart: on-failure
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=indexer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    # persis data
    volumes:
      - type: volume
        source: data-indexer
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    networks:
      - tsn-network
  indexer:
    hostname: indexer
    restart: on-failure
    build:
      dockerfile: indexer.dockerfile
      args:
        NODE_COMETBFT_ENDPOINT: ${NODE_COMETBFT_ENDPOINT:-http://tsn-db:26657}
        KWIL_PG_CONN: ${KWIL_PG_CONN:-postgresql://kwild@kwil-postgres:5432/kwild?sslmode=disable}
        INDEXER_PG_CONN: "postgresql://postgres:postgres@indexer-postgres:5432/indexer?sslmode=disable"
    ports:
      - "1337:1337"
    networks:
      - tsn-network
    depends_on:
      indexer-postgres:
        condition: service_healthy

networks:
  tsn-network:
    external: true
    driver: bridge
    name: tsn-network
volumes:
  data-indexer: