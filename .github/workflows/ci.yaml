name: CI

on:
  workflow_call:
  pull_request:
    types: [ opened, synchronize, reopened, ready_for_review ]
  workflow_dispatch:
  push:
    branches:
      - main
      - refactor/upgrade-zero-seven

jobs:
  acceptance-test:
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Clear cache
        if: ${{ !env.ACT }} # skip during local actions testing
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - uses: actions/checkout@v4

      - name: Setup Go
        if: ${{ !env.ACT }} # skip during local actions testing
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Lint
        if: ${{ !env.ACT }} # skip during local actions testing
        uses: golangci/golangci-lint-action@v4
        with:
          args: --timeout=30m --config=.golangci.yml --issues-exit-code=0
          skip-cache: true

        # TODO: Test needs to be fixed first on issue 120 and 129
##      - name: Run Go Tests
##        run: |
##          task test:unit
#
      - name: Docker Compose Up
        uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./compose.yaml"
        env:
          # hardcoded for testing reasons
          whitelist_wallets: "0x304e893AdB2Ad8E8C37F4884Ad1EC3df8bA9bDcf"

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip pandas

        # It takes time to download the kwil binary and extract kwil-cli so I push kwil-cli to the repo.
        # It needed to seed database. Are there any better way to do this?
        # PRIVATE_KEY is hardcoded for testing reasons
      - name: Seed Database
        if: ${{ !env.ACT }} # act doesn't have uuidgen, so it will fail if run on act
        run: |
          timeout 300 docker logs tsn-db-tsn-db-1 -f | grep  -m1 -oP '"Health check state changed","state":"up"' || { ec=$?; [ $ec -eq 141 ] && true || (exit $ec); }
          export PRIVATE_KEY="0000000000000000000000000000000000000000000000000000000000000001"
          scripts/setup.sh
