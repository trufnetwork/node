name: Release

on:
  pushes:
    branches:
      - main

jobs:
  build-push-image:
    name: Build & push image
    if: false # temporary disable
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: '23.4'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Taskfile
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.x'
          check-latest: true
          cache: false

      - name: Install dependencies
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go version
          git config --global url."https://${GH_ACCESS_TOKEN}:x-oauth-basic@github.com/truflation/".insteadOf "https://github.com/truflation/"
          task install:deps
          go mod download

      - name: Generate go vendor
        #for faster builds and private repos, need to run this after pb:compile:v1
        run: |
          task vendor

      - name: configure variables
        id: config
        run: |
          version=`echo ${{ github.event.release.tag_name }} | sed 's/^v//'`
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers for TSN DB
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-tsn-db
          #key: ${{ runner.os }}-buildx-tsn-db-${{ github.sha }}
          key: ${{ runner.os }}-buildx-tsn-db
          restore-keys: |
            ${{ runner.os }}-buildx-tsn-db

      - name: Build & push KD image
        id: docker_build_tsn-db
        uses: docker/build-push-action@v4
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            git_commit=${{ github.sha }}
            version=${{ steps.config.outputs.version }}
            build_time=${{ github.event.release.created_at }}
          file: ./truflation/docker/tsn.dockerfile
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_KWILD_ECR }}:${{ steps.config.outputs.version }}
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.AWS_KWILD_ECR }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache-tsn-db
          cache-to: type=local,dest=/tmp/.buildx-cache-tsn-db-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-tsn-db
          mv /tmp/.buildx-cache-tsn-db-new /tmp/.buildx-cache-tsn-db

  deploy-with-cdk:
    name: Deploy with CDK
    runs-on: ubuntu-latest
    needs: build-push-image

    steps:
      - name: Checkout
        uses: actions/checkout@v2


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Deploy
        run: cdk deploy truflation/infra --require-approval never