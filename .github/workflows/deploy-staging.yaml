name: Deploy Staging Environment

on:
  push:
    branches:
      - main

jobs:
#  tests:
#    uses: ./.github/workflows/ci.yaml  # don't forget to add `on: [workflow_call]` to permit it
  build-image:
    environment: production
    name: Build image
    runs-on: ubuntu-latest
#    needs: [ tests ]  # require tests to pass before deploy runs
    steps:
      - uses: waycarbon/github-action-container-cleanup@v1

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: '23.4'
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Taskfile
        uses: arduino/setup-task@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.x'
          check-latest: true
          cache: true

      - name: Install dependencies
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go version
          git config --global url."https://${GH_ACCESS_TOKEN}:x-oauth-basic@github.com/truflation/".insteadOf "https://github.com/truflation/"
          task install:deps
          go work init
          go work use truflation/infra
          go mod download
          go work vendor

#      - name: Generate go vendor
#        #for faster builds and private repos, need to run this after pb:compile:v1
#        run: |
#          go work vendor

      - name: configure variables
        id: config
        run: |
          version=`echo ${{ github.event.release.tag_name }} | sed 's/^v//'`
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2

      - name: Cache Docker layers for TSN DB
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-tsn-db
          # we don't use sha, so we can reuse between commits.
          # docker takes care of invalidating the cache if the build context changes
          #key: ${{ runner.os }}-buildx-tsn-db-${{ github.sha }}
          key: ${{ runner.os }}-buildx-tsn-db
          restore-keys: |
            ${{ runner.os }}-buildx-tsn-db

      # this step includes building the docker image. See main_cdk.go for details on args used
      - name: Deploy
        run: |
          cd truflation/infra
          # this must be on absolute path
          export CDK_DOCKER=$(pwd)/buildx.sh

          cdk deploy --require-approval never
        env:
          GIT_COMMIT: ${{ github.sha }}
          GIT_VERSION: ${{ steps.config.outputs.version }}
          BUILD_TIME: ${{ github.event.release.created_at }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-tsn-db
          mv /tmp/.buildx-cache-tsn-db-new /tmp/.buildx-cache-tsn-db