name: Deploy Staging Environment

on:
  push:
    branches:
      - main

jobs:
  #  tests:
  #    uses: ./.github/workflows/ci.yaml  # don't forget to add `on: [workflow_call]` to permit it
  build-image:
    environment: production
    name: Build image
    runs-on: ubuntu-latest
    #    needs: [ tests ]  # require tests to pass before deploy runs
    steps:
      - name: Check secrets
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          GW_SESSION_SECRET: ${{ secrets.GW_SESSION_SECRET }}
        if: ${{ env.PRIVATE_KEY == '' || env.AWS_ACCESS_KEY == '' || env.AWS_SECRET_KEY == '' || env.GW_SESSION_SECRET == '' }}
        run: |
          echo "Missing secrets"
          exit 1
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          check-latest: true

      - name: Install dependencies
        env:
          GH_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go work init
          go work use deployments/infra
          go mod download
          go work vendor

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install AWS CDK
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-2

      # this step includes building the docker image. See main_cdk.go for details on args used
      - name: Deploy
        run: |
          cd deployments/infra
          # this must be on absolute path
          export CDK_DOCKER=$(pwd)/buildx.sh

          cdk deploy --require-approval never --all
        env:
          # args used in tsn-db compose
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          WHITELIST_WALLETS: ${{ vars.whitelist_wallets }}
          CI: true

          # args used in gateway compose
          # the job should fail if GW_SESSION_SECRET is not set
          SESSION_SECRET: ${{ secrets.GW_SESSION_SECRET }}
          # E.g.: our frontend. If not provided, defaults to *
          CORS_ALLOWED_ORIGINS: ${{ vars.GW_CORS_ALLOWED_ORIGINS }}
          # domain is also used, but it is hardcoded in the CDK process depending on environment
          # e.g.: for staging, it is set to 'staging.tsn.truflation.com'