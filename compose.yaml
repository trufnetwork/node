services:
  kwil-postgres:
    image: "kwildb/postgres:latest"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    # persis data
    volumes:
      - type: volume
        source: data-kwil-postgres
        target: /var/lib/postgresql/data
        volume:
          nocopy: true
    networks:
      - tsn-network

  tsn-db:
    container_name: tsn-db
    hostname: tsn-db
    image: "tsn-db:local"
    build:
      context: .
      dockerfile: ./deployments/Dockerfile
      cache_from:
        - ${CACHE_FROM:-type=local,src=/tmp/buildx-cache}/tsn-db
      cache_to:
        - ${CACHE_TO:-type=local,dest=/tmp/buildx-cache-new}/tsn-db
    ports:
      - "8080:8080"
    depends_on:
      kwil-postgres:
        condition: service_healthy
    networks:
      - tsn-network
    volumes:
      - type: volume
        source: data-tsn-db
        target: /root/.kwild

  push-tsn-data:
    image: "push-tsn-data:local"
    build:
      context: .
      dockerfile: ./deployments/push-tsn-data.dockerfile
      cache_from:
        - ${CACHE_FROM:-type=local,src=/tmp/buildx-cache}/push-tsn-data
      cache_to:
        - ${CACHE_TO:-type=local,dest=/tmp/buildx-cache-new}/push-tsn-data
    volumes:
      - type: volume
        source: data-push-tsn-data
        # should only run once at deployment
        target: /firstrun
        volume:
          nocopy: false
    depends_on:
      tsn-db:
        condition: service_started
    networks:
      - tsn-network
    environment:
      # should come from environment
      - PRIVATE_KEY=${PRIVATE_KEY:?PRIVATE_KEY is necessary for deployment}
      # this is not required, but if it is set, it should be a comma separated list of wallet addresses (e.g. 0x1234,0x5678)
      # if not set, only the owner of the private key will be able to query
      - WHITELIST_WALLETS=${WHITELIST_WALLETS}
      - WRITE_WHITELIST_WALLETS=${WRITE_WHITELIST_WALLETS}

  finisher:
    container_name: wait-for-completion
    image: hello-world
    depends_on:
      push-tsn-data:
        condition: service_completed_successfully

networks:
  tsn-network:
    driver: bridge
    name: tsn-network

volumes:
  data-kwil-postgres:
  data-push-tsn-data:
  data-tsn-db:
